# https://leetcode.cn/problems/minimize-malware-spread-ii/

class Solution:
    def minMalwareSpread(self, graph, initial):
        """
        Inputs:
            graph: list[list[int]]
            initial: list[int]
        Outputs:
            res: int
        """
        n = len(graph)
        res, spread_min, init_min = n, n, initial[0]

        for node in initial:
            init_min = min(init_min, node)

            for i in range(n):
                if graph[node][i] == 1:
                    graph[node][i] = -1
                    graph[i][node] = -1
            
            visited = [0 for _ in range(n)]
            spread = 0
            for mal in initial:
                if node == mal:
                    continue
                q = deque()
                q.append(mal)
                if visited[mal] == 0:
                    visited[mal] = 1
                    spread += 1
                while q:
                    cur = q.popleft()
                    for i in range(n):
                        if visited[i] == 0 and graph[cur][i] == 1:
                            q.append(i)
                            visited[i] = 1
                            spread += 1
            
            if spread < spread_min or (spread == spread_min and node < res):
                res = node
                spread_min = spread
            
            for i in range(n):
                if graph[node][i] == -1:
                    graph[node][i] = 1
                    graph[i][node] = 1
        
        if res == n:
            res = init_min
        return res